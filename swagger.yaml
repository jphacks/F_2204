swagger: "2.0"
info:
  description: ""
  version: 1.0.0
  title: TechTrain MISSION Game API
host: "localhost:3030"
tags:
  - name: user
    description: ユーザ関連API
schemes:
  - http
paths:
  /users:
    post:
      tags:
        - user
      summary: ユーザ情報作成API
      description: ユーザ情報を作成します
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Request Body
          required: true
          schema:
            $ref: "#/definitions/UserCreateRequest"
          x-examples:
            example-1:
              name: test_user_1
              address: test_address
              password: test_password
              email: test@example.com
      responses:
        "201":
          description: A successful response.
          schema:
            $ref: "#/definitions/UserCreateResponse"
          examples:
            example-1:
              user_id: 1
    parameters: []
  "/users/{user_id}":
    get:
      summary: ユーザ情報を取得する
      tags:
        - user
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/User"
          examples:
            example-1:
              user_id: 1
              user_name: test_user_1
              address: test_address_1
              email: test_1@example.com
      operationId: get-users
    parameters:
      - type: integer
        name: user_id
        in: path
        required: true
  "/users/{user_id}/articles":
    parameters:
      - type: integer
        name: user_id
        in: path
        required: true
    get:
      summary: ユーザが持つ投稿一覧API
      tags:
        - article
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/UserArticlesResponse"
          examples:
            example-1:
              - article_id: 1
                user_id: 1
                uri: "https://...."
                article_name: test_article_1
                article_content: test_article_content_2
                meeting_time: "2022:10:10:20:00"
                created_at: "2022:10:10:15:00"
              - article_id: 2
                user_id: 2
                uri: "https://...."
                article_name: test_article_2
                article_content: test_article_content_2
                meeting_time: "2022:11:11:20:00"
                created_at: "2022:11:11:15:00"
      operationId: get-users-user_id-articles
  "/users/{user_id}/articles/{article_id}":
    parameters:
      - type: integer
        name: user_id
        in: path
        required: true
      - type: integer
        name: article_id
        in: path
        required: true
    get:
      summary: ユーザが持つ投稿一覧API
      tags:
        - article
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/UserArticlesResponse"
          examples:
            example-1:
              - article_id: 1
                user_id: 1
                uri: "https:/..."
                article_name: test_article_name
                article_content: test_article_content
                meeting_time: ""
                created_at: string
      operationId: get-users-user-id-articles
  /communities:
    get:
      summary: コミュニティ一覧取得
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CommunityListGetResponse"
          examples:
            example-1:
              - community_id: 1
                community_name: test_community_1
              - community_id: 2
                community_name: test_community_2
      operationId: get-communities
      tags:
        - community
  /communities/:
    post:
      summary: コミュニティ作成API
      operationId: post-communities-create
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CommunityCreateResponse"
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/CommunityCreateRequest"
          x-examples:
            example-1:
              community_name: test_community_1
      tags:
        - community
    parameters: []
  "/communities/{community_id}":
    parameters:
      - type: integer
        name: community_id
        in: path
        required: true
    get:
      summary: IDからコミュニティ情報を取得するAPI
      tags:
        - community
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CommunityGetResponse"
          examples:
            example-1:
              community_id: 1
              community_name: test_community_1
      operationId: get-communities-community_id
  "/communities/{community_id}/users":
    parameters:
      - type: integer
        name: community_id
        in: path
        required: true
    get:
      summary: IDからコミュニティ情報を取得するAPI
      tags:
        - community
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
          examples:
            example-1:
              - user_id: 1
                user_name: test_user_1
                address: test_address_1
                email: test_1@example.com
              - user_id: 2
                user_name: test_user_2
                address: test_address_2
                email: test_2@example.com
      operationId: get-communities-community_id-users
definitions:
  UserCreateRequest:
    type: object
    properties:
      name:
        type: string
        description: ユーザ名
      address:
        type: string
      password:
        type: string
      email:
        type: string
    required:
      - name
      - address
      - password
      - email
  UserCreateResponse:
    type: object
    description: ""
    properties:
      user_id:
        type: integer
    required:
      - user_id
  UserGetResponse:
    $ref: "#/definitions/UserGetResponse"
  User:
    title: User
    x-stoplight:
      id: ilc4743e1rnt5
    type: object
    properties:
      user_id:
        type: integer
      user_name:
        type: string
      address:
        type: string
      email:
        type: string
  Article:
    title: Article
    x-stoplight:
      id: 2ixfjv2glqpz3
    type: object
    description: ""
    properties:
      article_id:
        type: integer
      user_id:
        type: integer
      uri:
        type: string
        description: このuriを共有したグループだけが参加できる
      article_name:
        type: string
      article_content:
        type: string
      meeting_time:
        type: string
        description: 開催日時
      created_at:
        type: string
  UserArticlesResponse:
    title: UserArticlesResponse
    x-stoplight:
      id: gylb5d3itjvqx
    type: array
    items:
      $ref: "#/definitions/Article"
    description: ユーザが持つ投稿一覧
  UserArticleResponse:
    $ref: "#/definitions/Article"
  Community:
    title: Community
    x-stoplight:
      id: mi6e4udd2juu5
    type: object
    properties:
      community_id:
        type: integer
      community_name:
        type: string
  CommunityListGetResponse:
    title: CommunityGetResponse
    x-stoplight:
      id: cqe98fp2v7me5
    type: array
    items:
      $ref: "#/definitions/Community"
  CommunityGetResponse:
    $ref: "#/definitions/Community"
  CommunityCreateRequest:
    type: object
    properties:
      community_name:
        type: string
    required:
      - community_name
  CommunityCreateResponse:
    type: object
    properties:
      community_id:
        type: integer
      community_name:
        type: string
    required:
      - community_id
      - community_name
